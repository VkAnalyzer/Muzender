version: "3.4"
services:
  queue:
    image: rabbitmq:3.7.2-management
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 20s
        order: start-first
      restart_policy:
        condition: on-failure
    networks:
      - queue_net
    logging:
      driver: syslog

  redis:
    image: redis:5.0.0
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 20s
        order: start-first
      restart_policy:
        condition: on-failure
    networks:
      - queue_net

  recommedation_service:
    image: usasha/muzender:reco
    command: python3 recommendation_app.py
    depends_on:
      - queue
    environment:
      - SENTRY_DSN
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 20s
        order: start-first
      restart_policy:
        condition: on-failure
    volumes:
      - ./data:/data
    networks:
      - queue_net
    logging:
      driver: syslog

  parser:
    image: usasha/muzender:parser
    command: python3 parser.py
    depends_on:
      - queue
      - redis
    environment:
      - SENTRY_DSN
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 20s
        order: start-first
      restart_policy:
        condition: on-failure
    volumes:
      - ./data:/data
    networks:
      - queue_net
    dns:
      - 8.8.8.8
    logging:
      driver: syslog

#  crawler:
#    image: usasha/muzender:vk_crawler
#    command: python3 crawler.py
#    depends_on:
#      - queue
#    environment:
#      - SENTRY_DSN
#    deploy:
#      replicas: 3
#      update_config:
#        parallelism: 1
#        delay: 20s
#        order: start-first
#      restart_policy:
#        condition: on-failure
#    volumes:
#      - ./data:/data
#    networks:
#      - queue_net
#    dns:
#      - 8.8.8.8
#    logging:
#      driver: syslog

  web_server:
    image: usasha/muzender:web_server
    command: python3 web_server/manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      - queue
    environment:
      - SENTRY_DSN
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 20s
      restart_policy:
        condition: on-failure
    networks:
      - queue_net
    dns:
      - 8.8.8.8
    logging:
      driver: syslog

  tg_bot:
    image: usasha/muzender:tg_bot
    command: python3 bot.py
    depends_on:
      - queue
    environment:
      - SENTRY_DSN
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 20s
        order: start-first
      restart_policy:
        condition: on-failure
    volumes:
      - ./data:/data
    networks:
      - queue_net
    dns:
      - 8.8.8.8
    logging:
      driver: syslog

networks:
  queue_net:
    driver: overlay
